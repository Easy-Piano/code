<?xml version="1.0" encoding="windows-1251"?>

<project name="EasyPiano" basedir="." default="run">
    <!--Устанавливаем глобальные свойства для данного проекта-->
    <property name="src" location="src"/>
    <property name="buildSrc" location="build/classes"/>
    <property name="buildTest" location="build/tests"/>
    <property name="dist"  location="dist"/>
    <property name="test" location="test"/>

    <!--Эта задача создает папки для размещения скомпилированных
        исходников и дистрибутива-->
    <target name="init">
        <mkdir dir="${buildSrc}"/>
        <mkdir dir="${buildTest}"/>
        <mkdir dir="${dist}"/>
    </target>

    <!--Эта задача выполняет компиляцию проекта-->
    <target name="compile" depends="init">
        <javac srcdir="${src}" destdir="${buildSrc}"/>
        <javac srcdir="${test}" destdir="${buildTest}">
            <classpath>
                <pathelement path="C:/junit3.8.1/junit.jar"/>
                <pathelement path="${buildSrc}"/>
            </classpath>
        </javac>
    </target>

    <!-- Эта задача упаковывает программу в jar-архив -->
    <target name="dist" depends="compile" description="Create jar-file">
        <jar jarfile="${dist}/myProject.jar" basedir="${buildSrc}"
             manifest="${src}/manifest.mf"/>
    </target>

    <!-- Эта задача запускает программу -->
    <target name="run" depends="dist" description="Run program">
        <java jar="${dist}/myProject.jar" fork="true"/>
    </target>

    <!-- Эта задача упаковывает файлы с исходными кодами и ресурсами
        в zip-архив -->
    <target name="packSrc">
        <zip destfile="myProject_Src.zip">
            <fileset dir="." includes="**/*.java, **/*.mf, **/*.xml"/>
        </zip>
    </target>

    <!-- Эта задача выполняет тестирование проекта -->
    <target name="test" depends="compile">
        <junit fork="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${buildTest}"/>
                <pathelement location="${buildSrc}"/>
            </classpath>
            <formatter type="plain" usefile="false" />
            <test name="tools.utils.Class1Test"/>
            <test name="tools.utils.Class2Test"/>
        </junit>
    </target>

    <!-- Эта задача удаляет все, кроме исходников -->
    <target name="clean">
        <delete dir="build"/>
        <delete dir="${dist}"/>
        <delete file="myProject_Src.zip"/>
    </target>
</project>